//server/routes/routes.js
var express = require('express');
var router = express.Router();
var bodyParser = require('body-parser');
var Record = require('../../models/Record');
router.get('/', function(req, res){
  res.render('index')
});



router.route('/insert')
.post(function(req,res) {
  var record = new Record();

  /* not sure how to implement
    record.recordID = current max recordid ++;
    record.savedDate = new Date();
    record.imageAddress = ... generated by our website info fetcher
  */
      record.authorUserID = req.body.authorUserID;
      record.groupID = req.body.groupID;
      record.title = req.body.title;
      record.url = req.body.url;
      record.location = req.body.location; //should display default value as the fetched location from the article
      record.endDate = req.body.endDate;
      record.defaultTagging = req.body.defaultTagging;
      record.freeTagging = req.body.freeTagging;


  record.save(function(err) {
      if (err)
        res.send(err);
      res.send('Record successfully added!');
  });
})



//non-fixed
router.route('/update')
.post(function(req, res) {
 const doc = {
     title: req.body.title,
     url: req.body.url,
     amount: req.body.amount,
     month: req.body.month,
     year: req.body.year,
     tags: req.body.tags
 };
 console.log(doc);
  Record.update({recordID: req.body.recordID}, doc, function(err, result) {
      if (err)
        res.send(err);
      res.send('Record successfully updated!');
  });
});




router.get('/delete', function(req, res){

 //var id = req.query.id;
 var id = req.query.RecordID;
 Record.find({recordID: id}).remove().exec(function(err, record) {
  if(err)
   res.send(err)
  res.send('Record successfully deleted!');
 })
});


router.get('/all', function(req, res) {
  Record.find(function (err, records) {
    if (err)
     res.send(err);
    res.json(records);
  });
});
//
// router.get('/getAll',function(req, res) {
//  var groupIDRec = req.query.groupID;
//  //var yearRec = req.query.year;
//  // if(monthRec && monthRec != 'All'){
//  //  Record.find({$and: [ {month: monthRec}, {year: yearRec}]}, function(err, records) {
//  //   if (err)
//  //    res.send(err);
//  //   res.json(records);
//  //  });
//  // } else {
//   Record.find({groupID: groupIDRec}, function(err, records) {
//    if (err)
//     res.send(err);
//     //what does this mean;
//    res.json(records);
//   });
//
// });



module.exports = router;
